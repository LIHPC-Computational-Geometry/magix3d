#! /bin/bash
# Rem 1 : -v affiche les lignes au fur et à mesure qu'elles sont exécutées.
# Rem 2 : sur station Ubuntu s'arrête si /bin/sh ...
set -eo pipefail

#
# Procédure standard d'exécution de Magix3DBatch.
#
# Version @MAGIX3D_VERSION@
#

# Protection contre l'attente de , comme séparateur décimale lors des lectures de maillage :
export -n LC_ALL
export LC_NUMERIC=C

#REM : lsb_release -d utilise 2 types de séparateurs, tab puis espaces => on remplace les tabs par des espaces puis on cherche l'info souhaitée ...
if ! command -v ccc_os &> /dev/null
then
    PLATFORM=`lsb_release -d | tr -s '\t' ' ' | cut -d' ' -f2`
else
    PLATFORM=`ccc_os`
fi
ROOT_DIR=@CMAKE_INSTALL_PREFIX@

# Spécificités Magix3D :
export PYTHONPATH=@CMAKE_INSTALL_PREFIX@/@MAGIX3D_BINDING_INSTALL_DIR@:@ADDPYTHONPACKAGES@$PYTHONPATH
export MGX3D_PATH=@CMAKE_INSTALL_PREFIX@/@MAGIX3D_BINDING_INSTALL_DIR@
DEFAULT_CONFIG="-defaultConfig $ROOT_DIR/etc/magix3d.xml"
CONFIG_PATCHS="-userConfigPatchs $ROOT_DIR/etc/magix3d_patchs.xml"

if [ "${LM_NPROCS:-}" != "" -a "${LM_NPROCS:-}" != "1" ]
then
    echo "Execution parallele"
else
    echo "Execution sequentielle"
    export MGX3D_PARALLEL_SERVER=1
fi

# LD_LIBRARY_PATH : nécessaire sur Ubuntu, donc pourquoi pas d'autres ?
#export LD_LIBRARY_PATH=@VTK_LIBRARY_PATH@:$LD_LIBRARY_PATH

args="$DEFAULT_CONFIG $CONFIG_PATCHS $*"

$ROOT_DIR/bin/@MAGIX3D_BATCH_EXE@ $args
